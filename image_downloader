#!/bin/bash

if ! [[ $(which jq) ]] ; then
  echo "installing dependency"
  brew install jq
fi

data_url="json_data_url"
json=$(curl -# $data_url)
string=$(echo ${json} | jq '.data.products[].image'| tr -d '"')

read -a array <<< $string

#recreate folder to store image sets
# rm -rf Assets.xcassets
# mkdir Assets.xcassets

# loop
for i in "${array[@]}"
  do

  echo "downloading from $i"

# get url
  url=$i
# get file
  curl -O -# $url
# get file name
  fullname=$(basename "$url")
  filename=$(echo $fullname | cut -f 1 -d '.')
  echo "filename $filename"
  mv $fullname $filename.png

# get image size
  width3=$(identify -ping -format '%w' $filename.png)
  height3=$(identify -ping -format '%h' $filename.png)
  echo "size $width3 $height3"

# calculate size for 2x image
  width2=$(($width3*2/3))
  height2=$(($height3*2/3))
  echo "size $width2 $height2"

# calculate size for 1x image
  width=$(($width3*1/3))
  height=$(($height3*1/3))
  echo "size $width $height"

# create 3x image
  cp $filename.png $filename@3x.png
# create 2x image
  convert $filename.png    -resize $height2x$width2\> $filename@2.png
# create 1x image
  convert $filename.png    -resize $heightx$width\> $filename.png

#move to image set folder
  mkdir temp
  mv $filename* temp
  mv temp $filename.imageset
done

#find path of Assets.xcassets
path=$(find output -path '*.xcassets')

# copy all image set to xcassets and delete temp files
cp -Rf *.imageset "$path" && rm -r *.imageset
